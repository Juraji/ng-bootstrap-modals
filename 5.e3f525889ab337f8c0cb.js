(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{Vkzc:function(e,s,t){"use strict";t.r(s),s.default="import {Component} from '@angular/core';\nimport {Modals} from '@juraji/ng-bootstrap-modals';\nimport {of} from 'rxjs';\nimport {delay} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-default-shade-example',\n  templateUrl: './home.page.html',\n})\nexport class ShadeModalPage {\n  constructor(private readonly modals: Modals) {}\n\n  onBlockingShade() {\n    const message = 'I am a blocking shade with HTML.' +\n      '<br/><span class=\"text-info font-italic\">I will be dismissed in 10 seconds</span>';\n\n    const shadeRef = this.modals.shade(message);\n\n    of(1)\n      .pipe(delay(10_000))\n      .subscribe(() => shadeRef.dismiss());\n  }\n}\n"},dY45:function(e,s,t){"use strict";t.r(s),s.default="import {Component} from '@angular/core';\nimport {Modals} from '@juraji/ng-bootstrap-modals';\nimport {of} from 'rxjs';\nimport {delay} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-default-shade-example',\n  templateUrl: './home.page.html',\n})\nexport class ShadeModalPage {\n  constructor(private readonly modals: Modals) {}\n\n  onBlockingShade() {\n    const timer$ = interval(1000)\n      .pipe(startWith(-1), take(10));\n\n    const message$ = timer$\n      .pipe(map(i => `I am a blocking shade with HTML.<br/><span class=\"text-info font-italic\">I will be dismissed in ${9 - i} seconds</span>`));\n\n    const shadeRef = this.modals.shade(message$);\n\n    timer$\n      .pipe(last(), delay(1000))\n      .subscribe(() => shadeRef.dismiss());\n  }\n}\n"},jdWc:function(e,s,t){"use strict";t.r(s),s.default="import {Component} from '@angular/core';\nimport {Modals} from '@juraji/ng-bootstrap-modals';\nimport {concat, interval, of} from 'rxjs';\nimport {delay, take} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-indeterminate-progress-shade-example',\n  templateUrl: './home.page.html',\n})\nexport class ShadeModalPage {\n  constructor(private readonly modals: Modals) {}\n\n  onShadeWithProgress() {\n    const message = 'I am a shade with a progressbar.';\n\n    const progress = concat(\n      of(0).pipe(delay(2000)),      // Emulate task starting, a.k.a. indeterminate\n      interval(50).pipe(take(100))  // Emit 0...100 every 50ms, total ~5 seconds\n    );\n\n    const ref = this.modals.shade(message, progress);\n\n    progress.pipe(delay(1000)).subscribe({complete: () => ref.dismiss()});\n  }\n}\n"},kAAO:function(e,s,t){"use strict";t.r(s),s.default="import {Component} from '@angular/core';\nimport {Modals} from '@juraji/ng-bootstrap-modals';\nimport {EMPTY, of} from 'rxjs';\nimport {delay, take} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-indeterminate-progress-shade-example',\n  templateUrl: './home.page.html',\n})\nexport class ShadeModalPage {\n  constructor(private readonly modals: Modals) {}\n\n  onShadeWithIndeterminateProgress() {\n    const message = 'I am a shade for a indeterminate task.' +\n      '<br/><span class=\"text-info font-italic\">I will be dismissed in 10 seconds</span>';\n\n    // Note the empty observable!\n    const shadeRef = this.modals.shade(message, EMPTY);\n\n    of(1)\n      .pipe(delay(10_000))\n      .subscribe(() => shadeRef.dismiss());\n  }\n}\n"},vYGN:function(e,s,t){"use strict";t.r(s),t.d(s,"ShadeModalModule",function(){return w});var a=t("ofXK"),n=t("tyNb"),o=t("LRne"),i=t("HDdC"),r=t("D0XW"),d=t("Y7HM");function c(e=0,s=r.a){return(!Object(d.a)(e)||e<0)&&(e=0),s&&"function"==typeof s.schedule||(s=r.a),new i.a(t=>(t.add(s.schedule(l,e,{subscriber:t,counter:0,period:e})),t))}function l(e){const{subscriber:s,counter:t,period:a}=e;s.next(t),this.schedule({subscriber:s,counter:t+1,period:a},a)}var p=t("EY2u"),m=t("GyhO"),b=t("3E0/"),h=t("JX91"),u=t("IzEk"),f=t("lJxs"),g=t("NJ9Y"),y=t("fXoL"),x=t("2Rjt"),R=t("I/2r");const v=[{path:"",component:(()=>{class e{constructor(e){this.modals=e,this.defaultShadeExamples=[{file:"default-shade-example.component.ts",contents:t("Vkzc").default},{file:"app.module.ts",contents:t("1pU9").default}],this.shadeWithObsMessageExamples=[{file:"shade-with-observable-message-example.component.ts",contents:t("dY45").default},{file:"app.module.ts",contents:t("1pU9").default}],this.indeterminateProgressShadeExamples=[{file:"indeterminate-progress-shade-example.component.ts",contents:t("kAAO").default},{file:"app.module.ts",contents:t("1pU9").default}],this.progressShadeExamples=[{file:"progress-shade-example.component.ts",contents:t("jdWc").default},{file:"app.module.ts",contents:t("1pU9").default}]}onBlockingShade(){const e=this.modals.shade('I am a blocking shade with HTML.<br/><span class="text-info font-italic">I will be dismissed in 10 seconds</span>');Object(o.a)(1).pipe(Object(b.a)(1e4)).subscribe(()=>e.dismiss())}onBlockingWithObsMessageShade(){const e=c(1e3).pipe(Object(h.a)(-1),Object(u.a)(10)),s=e.pipe(Object(f.a)(e=>`I am a blocking shade with HTML.<br/><span class="text-info font-italic">I will be dismissed in ${9-e} seconds</span>`)),t=this.modals.shade(s);e.pipe(Object(g.a)(),Object(b.a)(1e3)).subscribe(()=>t.dismiss())}onShadeWithIndeterminateProgress(){const e=this.modals.shade('I am a shade for a indeterminate task.<br/><span class="text-info font-italic">I will be dismissed in 10 seconds</span>',p.a);Object(o.a)(1).pipe(Object(b.a)(1e4)).subscribe(()=>e.dismiss())}onShadeWithProgress(){const e=Object(m.a)(Object(o.a)(0).pipe(Object(b.a)(2e3)),c(50).pipe(Object(u.a)(100))),s=this.modals.shade("I am a shade with a progressbar. Hold on while I load...",e);e.pipe(Object(b.a)(1e3)).subscribe({complete:()=>s.dismiss()})}}return e.\u0275fac=function(s){return new(s||e)(y.Lb(x.h))},e.\u0275cmp=y.Fb({type:e,selectors:[["ng-component"]],decls:50,vars:4,consts:[[1,"container"],[1,"font-italic"],[1,"card","mb-2"],[1,"card-header"],[1,"card-body"],[1,"mb-3"],[1,"btn","btn-primary","mr-4",3,"click"],[3,"examples"],[1,"card"]],template:function(e,s){1&e&&(y.Rb(0,"div",0),y.Rb(1,"h1"),y.yc(2,"Shade Modals"),y.Qb(),y.Rb(3,"p"),y.yc(4," The Blocking Shade modal is designed to block a user from the UI during a long running task. "),y.Qb(),y.Rb(5,"p"),y.yc(6," It has support for displaying progress, by supplying an observable which emits the progress from 0 until 100."),y.Mb(7,"br"),y.Rb(8,"span",1),y.yc(9,"When nothing is emitted from the observable, or it is empty, the shade will display an indeterminate progress bar."),y.Qb(),y.Qb(),y.Rb(10,"div",2),y.Rb(11,"div",3),y.Rb(12,"h4"),y.yc(13,"Try it out!"),y.Qb(),y.Qb(),y.Rb(14,"div",4),y.Rb(15,"div",5),y.Rb(16,"button",6),y.bc("click",function(){return s.onBlockingShade()}),y.yc(17,"Default blocking shade with message"),y.Qb(),y.Qb(),y.Mb(18,"app-example-code",7),y.Qb(),y.Qb(),y.Rb(19,"div",2),y.Rb(20,"div",3),y.Rb(21,"h4"),y.yc(22,"Try it out!"),y.Qb(),y.Qb(),y.Rb(23,"div",4),y.Rb(24,"p"),y.yc(25," Q: What if I wanted to update the displayed message?"),y.Mb(26,"br"),y.yc(27," A: Well you can supply an Observable, when a new message is emitted, the modal's content is updated. "),y.Qb(),y.Rb(28,"div",5),y.Rb(29,"button",6),y.bc("click",function(){return s.onBlockingWithObsMessageShade()}),y.yc(30,"Shade with Observable message"),y.Qb(),y.Qb(),y.Mb(31,"app-example-code",7),y.Qb(),y.Qb(),y.Rb(32,"div",2),y.Rb(33,"div",3),y.Rb(34,"h4"),y.yc(35,"Try it out!"),y.Qb(),y.Qb(),y.Rb(36,"div",4),y.Rb(37,"div",5),y.Rb(38,"button",6),y.bc("click",function(){return s.onShadeWithIndeterminateProgress()}),y.yc(39,"Shade with indeterminate progress"),y.Qb(),y.Qb(),y.Mb(40,"app-example-code",7),y.Qb(),y.Qb(),y.Rb(41,"div",8),y.Rb(42,"div",3),y.Rb(43,"h4"),y.yc(44,"Try it out!"),y.Qb(),y.Qb(),y.Rb(45,"div",4),y.Rb(46,"div",5),y.Rb(47,"button",6),y.bc("click",function(){return s.onShadeWithProgress()}),y.yc(48,"Shade with incrementing progress"),y.Qb(),y.Qb(),y.Mb(49,"app-example-code",7),y.Qb(),y.Qb(),y.Qb()),2&e&&(y.zb(18),y.ic("examples",s.defaultShadeExamples),y.zb(13),y.ic("examples",s.shadeWithObsMessageExamples),y.zb(9),y.ic("examples",s.indeterminateProgressShadeExamples),y.zb(9),y.ic("examples",s.progressShadeExamples))},directives:[R.a],encapsulation:2}),e})()}];let j=(()=>{class e{}return e.\u0275mod=y.Jb({type:e}),e.\u0275inj=y.Ib({factory:function(s){return new(s||e)},imports:[[n.c.forChild(v)],n.c]}),e})();var k=t("G7De");let w=(()=>{class e{}return e.\u0275mod=y.Jb({type:e}),e.\u0275inj=y.Ib({factory:function(s){return new(s||e)},imports:[[a.c,j,k.a,x.i]]}),e})()}}]);